#' @examples
#' example.subject<-c("Sarah","John","Beth","Anna","Sarah","Sarah","Chris","Blake","John","Anna")
#' example.dat<-data.frame("Y"=rnorm(n=length(example.subject)),
#'                         "X1"=rpois(n=length(example.subject), lambda = 3),
#'                         "X2"=rnorm(n=length(example.subject)),
#'                         "X3"=rbeta(n=length(example.subject), shape1 = 3, shape2 = 0.5),
#'                         "subjects"=example.subject)
#' output<-boots.samples(dat=example.dat,sub.id = "subjects",B=4) #create 4 bootstrap samples
#' output[[1]] #This is the first one!
#' @export
boots.samples<-function(dat, sub.id,B){
library(data.table)
sub.id<-dat[,sub.id]
#collect unique subject ID's
unique.id<-unique(sub.id)
#sample unique subject ID, B number of times
this.index<-sapply(1:B,function(e){sample(unique.id, size = length(unique.id),replace = TRUE)})
#we need to take a note of people who are sampled more than once to make sure that they are sampled from the data as if they are different individuals.
no.repeat.id<-
apply(this.index,2, function(x){
temp<-table(x)
for(i in seq_along(temp)){
if(temp[i]>1){ #if the subject id appears more than once
num.appearance<-temp[i] #number of times the subject appears in the sample
x[which(x==names(temp)[i])]<-paste0(names(temp)[i],"__",1:num.appearance) #generate new subject ID by concatenating "_#" at the end of the id. Replace the old name with this
}
}
x #return the list of sampled subject ID , now all sample should be unique subject ID.
})
output<-
apply(no.repeat.id,2,function(x){
temp<-
sapply(x,function(x_i){ #for each subject
index<-which(sub.id==stringr::word(x_i,1,sep = "\\__")) #index of original data where the subject id appears
cbind(index, "no.repeat.id"=rep(x_i,length(index)))}) #get all observation for this particular subject.
#bind the index and no.repeat.id. as rows
temp.dat<-do.call(rbind, lapply(temp, data.table::data.table))
complete.dat<-data.table::as.data.table(dat[temp.dat$index,])
complete.dat[,no.repeat.sub.id=(temp.dat$no.repeat.id)] # add the new subject ID column, with no repetition
}
)
output
}
library(boots.lmer)
#' @examples
#' example.subject<-c("Sarah","John","Beth","Anna","Sarah","Sarah","Chris","Blake","John","Anna")
#' example.dat<-data.frame("Y"=rnorm(n=length(example.subject)),
#'                         "X1"=rpois(n=length(example.subject), lambda = 3),
#'                         "X2"=rnorm(n=length(example.subject)),
#'                         "X3"=rbeta(n=length(example.subject), shape1 = 3, shape2 = 0.5),
#'                         "subjects"=example.subject)
#' output<-boots.samples(dat=example.dat,sub.id = "subjects",B=4) #create 4 bootstrap samples
#' output[[1]] #This is the first one!
#' @export
boots.samples<-function(dat, sub.id,B){
library(data.table)
sub.id<-dat[,sub.id]
#collect unique subject ID's
unique.id<-unique(sub.id)
#sample unique subject ID, B number of times
this.index<-sapply(1:B,function(e){sample(unique.id, size = length(unique.id),replace = TRUE)})
#we need to take a note of people who are sampled more than once to make sure that they are sampled from the data as if they are different individuals.
no.repeat.id<-
apply(this.index,2, function(x){
temp<-table(x)
for(i in seq_along(temp)){
if(temp[i]>1){ #if the subject id appears more than once
num.appearance<-temp[i] #number of times the subject appears in the sample
x[which(x==names(temp)[i])]<-paste0(names(temp)[i],"__",1:num.appearance) #generate new subject ID by concatenating "_#" at the end of the id. Replace the old name with this
}
}
x #return the list of sampled subject ID , now all sample should be unique subject ID.
})
output<-
apply(no.repeat.id,2,function(x){
temp<-
sapply(x,function(x_i){ #for each subject
index<-which(sub.id==stringr::word(x_i,1,sep = "\\__")) #index of original data where the subject id appears
cbind(index, "no.repeat.id"=rep(x_i,length(index)))}) #get all observation for this particular subject.
#bind the index and no.repeat.id. as rows
temp.dat<-do.call(rbind, lapply(temp, data.table::data.table))
complete.dat<-data.table::as.data.table(dat[temp.dat$index,])
complete.dat[,no.repeat.sub.id=(temp.dat$no.repeat.id)] # add the new subject ID column, with no repetition
}
)
output
}
example.subject<-c("Sarah","John","Beth","Anna","Sarah","Sarah","Chris","Blake","John","Anna")
example.dat<-data.frame("Y"=rnorm(n=length(example.subject)),
"X1"=rpois(n=length(example.subject), lambda = 3),
"X2"=rnorm(n=length(example.subject)),
"X3"=rbeta(n=length(example.subject), shape1 = 3, shape2 = 0.5),
"subjects"=example.subject)
tt<-boots.samples(dat = example.dat, sub.id = "subjects",B=4)
tt<-boots.samples(dat = example.dat, sub.id = "subjects",B=4)
#' @examples
#' example.subject<-c("Sarah","John","Beth","Anna","Sarah","Sarah","Chris","Blake","John","Anna")
#' example.dat<-data.frame("Y"=rnorm(n=length(example.subject)),
#'                         "X1"=rpois(n=length(example.subject), lambda = 3),
#'                         "X2"=rnorm(n=length(example.subject)),
#'                         "X3"=rbeta(n=length(example.subject), shape1 = 3, shape2 = 0.5),
#'                         "subjects"=example.subject)
#' output<-boots.samples(dat=example.dat,sub.id = "subjects",B=4) #create 4 bootstrap samples
#' output[[1]] #This is the first one!
#' @export
boots.samples<-function(dat, sub.id,B){
library(data.table)
sub.id<-dat[,sub.id]
#collect unique subject ID's
unique.id<-unique(sub.id)
#sample unique subject ID, B number of times
this.index<-sapply(1:B,function(e){sample(unique.id, size = length(unique.id),replace = TRUE)})
#we need to take a note of people who are sampled more than once to make sure that they are sampled from the data as if they are different individuals.
no.repeat.id<-
apply(this.index,2, function(x){
temp<-table(x)
for(i in seq_along(temp)){
if(temp[i]>1){ #if the subject id appears more than once
num.appearance<-temp[i] #number of times the subject appears in the sample
x[which(x==names(temp)[i])]<-paste0(names(temp)[i],"__",1:num.appearance) #generate new subject ID by concatenating "_#" at the end of the id. Replace the old name with this
}
}
x #return the list of sampled subject ID , now all sample should be unique subject ID.
})
output<-
apply(no.repeat.id,2,function(x){
temp<-
sapply(x,function(x_i){ #for each subject
index<-which(sub.id==stringr::word(x_i,1,sep = "\\__")) #index of original data where the subject id appears
cbind(index, "no.repeat.id"=rep(x_i,length(index)))}) #get all observation for this particular subject.
#bind the index and no.repeat.id. as rows
temp.dat<-do.call(rbind, lapply(temp, data.table::data.table))
complete.dat<-data.table::as.data.table(dat[temp.dat$index,])
complete.dat[,no.repeat.sub.id:=(temp.dat$no.repeat.id)] # add the new subject ID column, with no repetition
}
)
output
}
#' @examples
#' example.subject<-c("Sarah","John","Beth","Anna","Sarah","Sarah","Chris","Blake","John","Anna")
#' example.dat<-data.frame("Y"=rnorm(n=length(example.subject)),
#'                         "X1"=rpois(n=length(example.subject), lambda = 3),
#'                         "X2"=rnorm(n=length(example.subject)),
#'                         "X3"=rbeta(n=length(example.subject), shape1 = 3, shape2 = 0.5),
#'                         "subjects"=example.subject)
#' output<-boots.samples(dat=example.dat,sub.id = "subjects",B=4) #create 4 bootstrap samples
#' output[[1]] #This is the first one!
#' @export
boots.samples<-function(dat, sub.id,B){
sub.id<-dat[,sub.id]
#collect unique subject ID's
unique.id<-unique(sub.id)
#sample unique subject ID, B number of times
this.index<-sapply(1:B,function(e){sample(unique.id, size = length(unique.id),replace = TRUE)})
#we need to take a note of people who are sampled more than once to make sure that they are sampled from the data as if they are different individuals.
no.repeat.id<-
apply(this.index,2, function(x){
temp<-table(x)
for(i in seq_along(temp)){
if(temp[i]>1){ #if the subject id appears more than once
num.appearance<-temp[i] #number of times the subject appears in the sample
x[which(x==names(temp)[i])]<-paste0(names(temp)[i],"__",1:num.appearance) #generate new subject ID by concatenating "_#" at the end of the id. Replace the old name with this
}
}
x #return the list of sampled subject ID , now all sample should be unique subject ID.
})
output<-
apply(no.repeat.id,2,function(x){
temp<-
sapply(x,function(x_i){ #for each subject
index<-which(sub.id==stringr::word(x_i,1,sep = "\\__")) #index of original data where the subject id appears
cbind(index, "no.repeat.id"=rep(x_i,length(index)))}) #get all observation for this particular subject.
#bind the index and no.repeat.id. as rows
temp.dat<-do.call(rbind, lapply(temp, data.table::data.table))
complete.dat<-data.table::as.data.table(dat[temp.dat$index,])
complete.dat[,no.repeat.sub.id:=(temp.dat$no.repeat.id)] # add the new subject ID column, with no repetition
}
)
output
}
tt<-boots.samples(dat = example.dat, sub.id = "subjects",B=4)
tt
#' @examples
#' example.subject<-c("Sarah","John","Beth","Anna","Sarah","Sarah","Chris","Blake","John","Anna")
#' example.dat<-data.frame("Y"=rnorm(n=length(example.subject)),
#'                         "X1"=rpois(n=length(example.subject), lambda = 3),
#'                         "X2"=rnorm(n=length(example.subject)),
#'                         "X3"=rbeta(n=length(example.subject), shape1 = 3, shape2 = 0.5),
#'                         "subjects"=example.subject)
#' output<-boots.samples(dat=example.dat,sub.id = "subjects",B=4) #create 4 bootstrap samples
#' output[[1]] #This is the first one!
#' @export
boots.samples<-function(dat, sub.id,B){
sub.id<-dat[,sub.id]
#collect unique subject ID's
unique.id<-unique(sub.id)
#sample unique subject ID, B number of times
this.index<-sapply(1:B,function(e){sample(unique.id, size = length(unique.id),replace = TRUE)})
#we need to take a note of people who are sampled more than once to make sure that they are sampled from the data as if they are different individuals.
no.repeat.id<-
apply(this.index,2, function(x){
temp<-table(x)
for(i in seq_along(temp)){
if(temp[i]>1){ #if the subject id appears more than once
num.appearance<-temp[i] #number of times the subject appears in the sample
x[which(x==names(temp)[i])]<-paste0(names(temp)[i],"__",1:num.appearance) #generate new subject ID by concatenating "_#" at the end of the id. Replace the old name with this
}
}
x #return the list of sampled subject ID , now all sample should be unique subject ID.
})
output<-
apply(no.repeat.id,2,function(x){
temp<-
sapply(x,function(x_i){ #for each subject
index<-which(sub.id==stringr::word(x_i,1,sep = "\\__")) #index of original data where the subject id appears
cbind(index, "no.repeat.id"=rep(x_i,length(index)))}) #get all observation for this particular subject.
#bind the index and no.repeat.id. as rows
temp.dat<-do.call(rbind, lapply(temp, data.table::data.table))
complete.dat<-data.table::as.data.table(dat[temp.dat$index,])
complete.dat[,no.repeat.sub.id=(temp.dat$no.repeat.id)] # add the new subject ID column, with no repetition
}
)
output
}
tt<-boots.samples(dat = example.dat, sub.id = "subjects",B=4)
library(boots.lmer)
output<-boots.samples(dat=example.dat,sub.id = "subjects",B=4)
devtools::use_package( "data.table", pkg = "." )
usethis::use_package( "data.table", pkg = "." )
?usethis::use_package
usethis::use_package( "data.table")
getwd()
library(boots.lmer)
library(boots.lmer)
library(boots.lmer)
library(boots.lmer)
library(boots.lmer)
library(boots.lmer)
?boots.lmer::boots.samples
example.subject<-c("Sarah","John","Beth","Anna","Sarah","Sarah","Chris","Blake","John","Anna")
example.dat<-data.frame("Y"=rnorm(n=length(example.subject)),
"X1"=rpois(n=length(example.subject), lambda = 3),
"X2"=rnorm(n=length(example.subject)),
"X3"=rbeta(n=length(example.subject), shape1 = 3, shape2 = 0.5),
"subjects"=example.subject)
output<-boots.samples(dat=example.dat,sub.id = "subjects",B=4) #create 4 bootstrap samples
output[[1]] #This is the first one!
lmer.out<-boots.lmer(y="Y", X=c("X1","X2","X3"), boots.samples.list = output)
lmer.out
library(boots.lmer)
example.subject<-c("Sarah","John","Beth","Anna","Sarah","Sarah","Chris","Blake","John","Anna")
example.dat<-data.frame("Y"=rnorm(n=length(example.subject)),
"X"=rpois(n=length(example.subject), lambda = 3),
"subjects"=example.subject)
output<-boots.samples(dat=example.dat,sub.id = "subjects",B=4) #create 4 bootstrap samples
lmer.out<-boots.lmer(y="Y", X=c("X1","X2","X3"), boots.samples.list = output)
lmer.out
library(boots.lmer)
library(boots.lmer)
library(boots.lmer)
example.subject<-c("Sarah","John","Beth","Anna","Sarah","Sarah","Chris","Blake","John","Anna")
example.dat<-data.frame("Y"=rnorm(n=length(example.subject)),
"X1"=rpois(n=length(example.subject), lambda = 3),
"X2"=rnorm(n=length(example.subject)),
"X3"=rbeta(n=length(example.subject), shape1 = 3, shape2 = 0.5),
"subjects"=example.subject)
output<-boots.samples(dat=example.dat,sub.id = "subjects",B=4) #create 4 bootstrap samples
output[[1]] #This is the first one!lmer.out<-boots.lmer(y="Y", X=c("X1","X2","X3"), boots.samples.list = output)
lmer.out<-boots.lmer(y="Y", X=c("X1","X2","X3"), boots.samples.list = output)
lmer.out
library(boots.lmer)
set.seed(1204)
output<-boots.samples(dat=example.dat,sub.id ="subjects",B=5000)
lmer.out<-boots.lmer(y="Y", X=c("X1","X2","X3"), boots.samples.list = output)
length(lmer.out)
lmer.out[[1]]
set.seed(1204)
output<-boots.samples(dat=example.dat,sub.id ="subjects",B=100)
set.seed(1204)
output<-boots.samples(dat=example.dat,sub.id ="subjects",B=100)
set.seed(1204)
output<-boots.samples(dat=example.dat,sub.id ="subjects",B=40)
output<-boots.samples(dat=example.dat,sub.id ="subjects",B=50)
set.seed(1204)
output<-boots.samples(dat=example.dat,sub.id ="subjects",B=50)
set.seed(1204)
output<-boots.samples(dat=example.dat,sub.id ="subjects",B=50)
set.seed(1204)
output<-boots.samples(dat=example.dat,sub.id ="subjects",B=45)
output2<-boots.samples(dat=example.dat,sub.id ="subjects",B=1)
set.seed(1204)
output<-boots.samples(dat=example.dat,sub.id ="subjects",B=46)
set.seed(1204)
output<-boots.samples(dat=example.dat,sub.id ="subjects",B=45)
library(boots.lmer)
library(boots.lmer)
set.seed(1020)
example.subject<-c("Sarah","John","Beth","Anna","Sarah","Sarah","Chris","Blake","John","Anna")
example.dat<-data.frame("Y"=rnorm(n=length(example.subject)),
"X1"=rpois(n=length(example.subject), lambda = 3),
"X2"=rnorm(n=length(example.subject)),
"X3"=rbeta(n=length(example.subject), shape1 = 3, shape2 = 0.5),
"subjects"=example.subject) #generate example data
output<-boots.samples(dat=example.dat,sub.id ="subjects",B=4) #a list of 4 bootstrap samples
library(boots.lmer)
set.seed(1020)
example.subject<-c("Sarah","John","Beth","Anna","Sarah","Sarah","Chris","Blake","John","Anna")
example.dat<-data.frame("Y"=rnorm(n=length(example.subject)),
"X1"=rpois(n=length(example.subject), lambda = 3),
"X2"=rnorm(n=length(example.subject)),
"X3"=rbeta(n=length(example.subject), shape1 = 3, shape2 = 0.5),
"subjects"=example.subject)
knitr::kable(example.dat, caption = "Table 1. Example data set.")
set.seed(1204)
output<-boots.samples(dat=example.dat,sub.id ="subjects",B=45)
output2<-boots.samples(dat=example.dat,sub.id ="subjects",B=1)
library(boots.lmer)
library(boots.lmer)
set.seed(1020)
example.subject<-c("Sarah","John","Beth","Anna","Sarah","Sarah","Chris","Blake","John","Anna")
example.dat<-data.frame("Y"=rnorm(n=length(example.subject)),
"X1"=rpois(n=length(example.subject), lambda = 3),
"X2"=rnorm(n=length(example.subject)),
"X3"=rbeta(n=length(example.subject), shape1 = 3, shape2 = 0.5),
"subjects"=example.subject) #generate example data
output<-boots.samples(dat=example.dat,sub.id ="subjects",B=4) #a list of 4 bootstrap samples
set.seed(1020)
example.subject<-c("Sarah","John","Beth","Anna","Sarah","Sarah","Chris","Blake","John","Anna")
example.dat<-data.frame("Y"=rnorm(n=length(example.subject)),
"X1"=rpois(n=length(example.subject), lambda = 3),
"X2"=rnorm(n=length(example.subject)),
"X3"=rbeta(n=length(example.subject), shape1 = 3, shape2 = 0.5),
"subjects"=example.subject) #generate example data
output<-boots.samples(dat=example.dat,sub.id ="subjects",B=4) #a list of 4 bootstrap samples
output
library(boots.lmer)
library(boots.lmer)
summary(lmer.out[[1]])
lmer.out[[1]]
?boots.samples
head(example.dat)
output[1]
output[5000]
output[46]
output[45]
library(boots.lmer)
output[[46]]
library(boots.lmer)
set.seed(1204)
output<-boots.samples(dat=example.dat,sub.id ="subjects",B=5000)
output[[5000]]
lmer.out<-boots.lmer(y="Y", X=c("X1","X2","X3"), boots.samples.list = output)
summary(lmer.out[[1]])
?boots.lmer
lmer.out<-boots.lmer(y="Y", X=c("X1","X2","X3"), boots.samples.list = output[c(1,2,3)])
lmer.out
lmer.out<-boots.lmer(y="Y", X=c("X1","X2","X3"), boots.samples.list = output[1:46])
lmer.out<-boots.lmer(y="Y", X=c("X1","X2","X3"), boots.samples.list = output[1:45])
output[46]
library(boots.lmer)
library(boots.lmer)
set.seed(1020)
example.subject<-c("Sarah","John","Beth","Anna","Sarah","Sarah","Chris","Blake","John","Anna")
example.dat<-data.frame("Y"=rnorm(n=length(example.subject)),
"X1"=rpois(n=length(example.subject), lambda = 3),
"X2"=rnorm(n=length(example.subject)),
"X3"=rbeta(n=length(example.subject), shape1 = 3, shape2 = 0.5),
"subjects"=example.subject) #generate example data
output<-boots.samples(dat=example.dat,sub.id ="subjects",B=4) #a list of 4 bootstrap samples
set.seed(1204)
output<-boots.samples(dat=example.dat,sub.id ="subjects",B=5000)
library(boots.lmer)
library(boots.lmer)
set.seed(1020)
example.subject<-c("Sarah","John","Beth","Anna","Sarah","Sarah","Chris","Blake","John","Anna")
example.dat<-data.frame("Y"=rnorm(n=length(example.subject)),
"X1"=rpois(n=length(example.subject), lambda = 3),
"X2"=rnorm(n=length(example.subject)),
"X3"=rbeta(n=length(example.subject), shape1 = 3, shape2 = 0.5),
"subjects"=example.subject) #generate example data
output<-boots.samples(dat=example.dat,sub.id ="subjects",B=4) #a list of 4 bootstrap samples
lmer.out<-boots.lmer(y="Y", X=c("X1","X2","X3"), boots.samples.list = output)
lmer.out
set.seed(1204)
output<-boots.samples(dat=example.dat,sub.id ="subjects",B=5000)
lmer.out<-boots.lmer(y="Y", X=c("X1","X2","X3"), boots.samples.list = output)
lmer.out[5000]
lmer.out1<-boots.lmer(y="Y", X=c("X1","X2","X3"), boots.samples.list = output[[100]])
library(boots.lmer)
library(boots.lmer)
library(boots.lmer)
output
set.seed(1020)
example.subject<-c("Sarah","John","Beth","Anna","Sarah","Sarah","Chris","Blake","John","Anna")
example.dat<-data.frame("Y"=rnorm(n=length(example.subject)),
"X1"=rpois(n=length(example.subject), lambda = 3),
"X2"=rnorm(n=length(example.subject)),
"X3"=rbeta(n=length(example.subject), shape1 = 3, shape2 = 0.5),
"subjects"=example.subject)
knitr::kable(example.dat, caption = "Table 1. Example data set.")
output<-boots.samples(dat = example.dat, sub.id = "subjects",B=4)
output
output
??boots.lmer
usethis::use_vignette("vignette")
library(boots.lmer)
library(boots.lmer)
??boots.lmer
install.packages("../boots.lmer_0.0.0.9000.tar.gz")
install.packages("../boots.lmer_0.0.0.9000.tar.gz")
library(boots.lmer)
set.seed(1020)
example.subject<-c("Sarah","John","Beth","Anna","Sarah","Sarah","Chris","Blake","John","Anna")
example.dat<-data.frame("Y"=rnorm(n=length(example.subject)),
"X1"=rpois(n=length(example.subject), lambda = 3),
"X2"=rnorm(n=length(example.subject)),
"X3"=rbeta(n=length(example.subject), shape1 = 3, shape2 = 0.5),
"subjects"=example.subject) #generate example data
output<-boots.samples(dat=example.dat,sub.id ="subjects",B=4) #a list of 4 bootstrap samples
lmer.out<-boots.lmer(y="Y", X=c("X1","X2","X3"), boots.samples.list = output)
lmer.out
lmer.out1<-boots.lmer(y="Y", X=c("X1","X2","X3"), boots.samples.list = output[[62]])
set.seed(1204)
output<-boots.samples(dat=example.dat,sub.id ="subjects",B=5000)
lmer.out1<-boots.lmer(y="Y", X=c("X1","X2","X3"), boots.samples.list = output[[62]])
this.fit<-(lme4::lmer(Y ~ X1 + X2 + X3 + (1 | no.repeat.sub.id), dat=output[[62]],REML=FALSE))
View(output[[62]])
this.fit<-(lme4::lmer(Y ~ X1 + X2 + (1 | no.repeat.sub.id), dat=output[[62]],REML=FALSE))
this.fit
set.seed(1020)
example.subject<-c("Sarah","John","Beth","Anna","Sarah","Sarah","Chris","Blake","John","Anna")
example.dat<-data.frame("Y"=rnorm(n=length(example.subject)),
"X1"=rpois(n=length(example.subject), lambda = 3),
"X2"=rnorm(n=length(example.subject)),
"X3"=rbeta(n=length(example.subject), shape1 = 3, shape2 = 0.5)+rnorm(length(exmaple.subject), mean=6),
"subjects"=example.subject) #generate example data
set.seed(1020)
example.subject<-c("Sarah","John","Beth","Anna","Sarah","Sarah","Chris","Blake","John","Anna")
example.dat<-data.frame("Y"=rnorm(n=length(example.subject)),
"X1"=rpois(n=length(example.subject), lambda = 3),
"X2"=rnorm(n=length(example.subject)),
"X3"=rbeta(n=length(example.subject), shape1 = 3, shape2 = 0.5)+rnorm(length(example.subject), mean=6),
"subjects"=example.subject) #generate example data
output<-boots.samples(dat=example.dat,sub.id ="subjects",B=4) #a list of 4 bootstrap samples
lmer.out<-boots.lmer(y="Y", X=c("X1","X2","X3"), boots.samples.list = output)
lmer.out
set.seed(1204)
output<-boots.samples(dat=example.dat,sub.id ="subjects",B=5000)
lmer.out1<-boots.lmer(y="Y", X=c("X1","X2","X3"), boots.samples.list = output)
summary(lmer.out[[1]])
coef.out<-
lapply(lmer.out,function(fit){
if(class(fit)=="lm"){ #If linear model was fit, use below function
coef(lmer.out[[46]])
}else{ #IF
lme4::fixef(lmer.out[[46]])
}
})
coef.out<-
lapply(lmer.out,function(fit){
if(class(fit)=="lm"){ #If linear model was fit, use below function
coef(fit)
}else{ #IF
lme4::fixef(fit)
}
})
length(coef.out)
lmer.out<-boots.lmer(y="Y", X=c("X1","X2","X3"), boots.samples.list = output)
coef.out<-
lapply(lmer.out,function(fit){
if(class(fit)=="lm"){ #If linear model was fit, use below function
coef(fit)
}else{ #IF
lme4::fixef(fit)
}
})
length(coef.out)
coef.out2<-Reduce("rbind",coef.out)
coef.out[[1]]
coef.out[[46]]
class(coef.out[[46]])
coef.out2<-do.call(rbind,coef.out)
coef.out[[27]]
output[[27]]
lmer.out[[27]]
which(is.na(this.X3))
#extract coefficient estimate for X3
this.X3<-
lapply(coef.out,function(x){
x["X3"]
})
#Here are all NA's
sum(is.na(this.X3))
which(is.na(this.X3))
lmer.out[[27]]
hist(this.X3)
this.X3
est.X3<-unlist(this.X3)
#extract coefficient estimate for X3
this.X3<-
lapply(coef.out,function(x){
x["X3"]
})
est.X3<-unlist(this.X3)
#Here the number of NA's
sum(is.na(est.X3))
#index of all whose estimated effect of X3 is NA
which(is.na(est.X3))
hist(est.X3)
?boots.lmer
install.packages("../boots.lmer_0.0.0.9000.tar.gz")
install.packages("../boots.lmer_0.0.0.9000.tar.gz")
